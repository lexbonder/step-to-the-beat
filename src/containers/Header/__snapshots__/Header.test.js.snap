// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header While a user is logged in should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    clearAccessToken={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
    location={
        Object {
            "pathname": "/confirm",
          }
    }
    logOutUser={[Function]}
    loggedIn={true}
    user={
        Object {
            "id": "lxbndr",
            "name": "Alex",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <header>
        <button
                className="home-button"
                onClick={[Function]}
        >
                <i
                        className="fas fa-home"
                />
        </button>
        <h2
                className="page-name"
        >
                Confirm
        </h2>
        <div
                className="menu-wrapper"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
        >
                <img
                        alt="profile"
                        className="profile-pic"
                        src={undefined}
                />
                <div
                        className="menu hide"
                >
                        <p
                                className="log-out"
                                onClick={[Function]}
                        >
                                Log Out
                        </p>
                </div>
        </div>
</header>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="home-button"
            onClick={[Function]}
>
            <i
                        className="fas fa-home"
            />
</button>,
          <h2
            className="page-name"
>
            Confirm
</h2>,
          <div
            className="menu-wrapper"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            <img
                        alt="profile"
                        className="profile-pic"
                        src={undefined}
            />
            <div
                        className="menu hide"
            >
                        <p
                                    className="log-out"
                                    onClick={[Function]}
                        >
                                    Log Out
                        </p>
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-home"
/>,
            "className": "home-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-home",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Confirm",
            "className": "page-name",
          },
          "ref": null,
          "rendered": "Confirm",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="profile"
                className="profile-pic"
                src={undefined}
/>,
              <div
                className="menu hide"
>
                <p
                                className="log-out"
                                onClick={[Function]}
                >
                                Log Out
                </p>
</div>,
            ],
            "className": "menu-wrapper",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "profile",
                "className": "profile-pic",
                "src": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="log-out"
                  onClick={[Function]}
>
                  Log Out
</p>,
                "className": "menu hide",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Log Out",
                  "className": "log-out",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Log Out",
                "type": "p",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "header",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <header>
          <button
                    className="home-button"
                    onClick={[Function]}
          >
                    <i
                              className="fas fa-home"
                    />
          </button>
          <h2
                    className="page-name"
          >
                    Confirm
          </h2>
          <div
                    className="menu-wrapper"
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
          >
                    <img
                              alt="profile"
                              className="profile-pic"
                              src={undefined}
                    />
                    <div
                              className="menu hide"
                    >
                              <p
                                        className="log-out"
                                        onClick={[Function]}
                              >
                                        Log Out
                              </p>
                    </div>
          </div>
</header>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="home-button"
              onClick={[Function]}
>
              <i
                            className="fas fa-home"
              />
</button>,
            <h2
              className="page-name"
>
              Confirm
</h2>,
            <div
              className="menu-wrapper"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
>
              <img
                            alt="profile"
                            className="profile-pic"
                            src={undefined}
              />
              <div
                            className="menu hide"
              >
                            <p
                                          className="log-out"
                                          onClick={[Function]}
                            >
                                          Log Out
                            </p>
              </div>
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <i
                className="fas fa-home"
/>,
              "className": "home-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-home",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Confirm",
              "className": "page-name",
            },
            "ref": null,
            "rendered": "Confirm",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="profile"
                  className="profile-pic"
                  src={undefined}
/>,
                <div
                  className="menu hide"
>
                  <p
                                    className="log-out"
                                    onClick={[Function]}
                  >
                                    Log Out
                  </p>
</div>,
              ],
              "className": "menu-wrapper",
              "onMouseEnter": [Function],
              "onMouseLeave": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "profile",
                  "className": "profile-pic",
                  "src": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p
                    className="log-out"
                    onClick={[Function]}
>
                    Log Out
</p>,
                  "className": "menu hide",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Log Out",
                    "className": "log-out",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": "p",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "header",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Header While a user is logged in userGreeting should match the snapshot if a user is logged in 1`] = `
<header>
  <button
    className="home-button"
    onClick={[Function]}
  >
    <i
      className="fas fa-home"
    />
  </button>
  <h2
    className="page-name"
  >
    Confirm
  </h2>
  <div
    className="menu-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    <img
      alt="profile"
      className="profile-pic"
      src={undefined}
    />
    <div
      className="menu hide"
    >
      <p
        className="log-out"
        onClick={[Function]}
      >
        Log Out
      </p>
    </div>
  </div>
</header>
`;

exports[`Header While a user is not logged in should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    clearAccessToken={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
    location={
        Object {
            "pathname": "/confirm",
          }
    }
    logOutUser={[Function]}
    loggedIn={false}
    user={
        Object {
            "id": "lxbndr",
            "name": "Alex",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
